#pragma kernel RandomTest

RWTexture2D<float4> Texture;
uint width;
uint height;

// Hash function www.cs.ubc.ca/~rbridson/docs/schechter-sca08-turbulence.pdf
uint hash(uint state)
{
    state ^= 2747636419u;
    state *= 2654435769u;
    state ^= state >> 16;
    state *= 2654435769u;
    state ^= state >> 16;
    state *= 2654435769u;
    return state;
}

[numthreads(16,1,1)]
void RandomTest(uint3 id : SV_DispatchThreadID)
{
    // if the thread is outside the the texture bounds : exit
    if (id.x < 0 || id.x > width || id.y < 0 || id.y > height)
    {
        return;
    }

    const int pixelIndex = id.y * width + id.x;
    const uint pseudRandomNumber = hash(pixelIndex);
    Texture[id.xy] = pseudRandomNumber / 4294967295.0;
}
